// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
	Not(in=sel[2], out=w1);
	Not(in=sel[1], out=w11);
	DMux(in=in,sel=sel[0], a=wa1, b=wb1);
	And(a=wa1, b=w11, out=wa);
	And(a=wb1, b=w11, out=wb);
	DMux(in=in,sel=sel[0], a=wc1, b=wd1);
	And(a=wc1, b=sel[1], out=wc);
	And(a=wd1, b=sel[1], out=wd);
	And(a=wa, b=w1, out=a);
	And(a=wb, b=w1, out=b);
	And(a=wc, b=w1, out=c);
	And(a=wd, b=w1, out=d);
	Not(in=sel[1], out=w12);
	DMux(in=in,sel=sel[0], a=we1, b=wf1);
	And(a=we1, b=w12, out=we);
	And(a=wf1, b=w12, out=wf);
	DMux(in=in,sel=sel[0], a=wg1, b=wh1);
	And(a=wg1, b=sel[1], out=wg);
	And(a=wh1, b=sel[1], out=wh);
	And(a=we, b=sel[2], out=e);
	And(a=wf, b=sel[2], out=f);
	And(a=wg, b=sel[2], out=g);
	And(a=wh, b=sel[2], out=h);
    // Put your code here:
}